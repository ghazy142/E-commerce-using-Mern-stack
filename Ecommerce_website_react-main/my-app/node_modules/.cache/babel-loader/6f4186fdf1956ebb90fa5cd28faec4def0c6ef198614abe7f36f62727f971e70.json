{"ast":null,"code":"import axios from \"axios\";\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_ORDERS_REQUEST, ORDER_LIST_ORDERS_SUCCESS, ORDER_LIST_ORDERS_FAIL } from \"../constants/orderConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log(order);\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// updating the order after confirming payment\nexport const payOrder = (orderId, paymentResults) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResults, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// action to list orders in user profile\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_ORDERS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_ORDERS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_ORDERS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_ORDERS_REQUEST","ORDER_LIST_ORDERS_SUCCESS","ORDER_LIST_ORDERS_FAIL","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","console","log","error","payload","response","data","message","getOrderDetails","id","get","payOrder","orderId","paymentResults","put","listOrders"],"sources":["C:/Users/kyril/Downloads/f/Ecommerce_website_react-main/my-app/src/actions/orderActions.js"],"sourcesContent":["import axios from \"axios\";\n\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_LIST_ORDERS_REQUEST,\n  ORDER_LIST_ORDERS_SUCCESS,\n  ORDER_LIST_ORDERS_FAIL,\n} from \"../constants/orderConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    console.log(order);\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// updating the order after confirming payment\nexport const payOrder =\n  (orderId, paymentResults) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ORDER_PAY_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/orders/${orderId}/pay`,\n        paymentResults,\n        config\n      );\n\n      dispatch({\n        type: ORDER_PAY_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_PAY_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n// action to list orders in user profile\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_ORDERS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n\n    dispatch({\n      type: ORDER_LIST_ORDERS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_ORDERS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}